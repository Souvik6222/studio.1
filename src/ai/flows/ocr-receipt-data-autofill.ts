// This is an autogenerated file from genkit, please do not edit
'use server';
/**
 * @fileOverview An OCR agent that autofills receipt data.
 *
 * - ocrReceiptDataAutofill - A function that handles the OCR process.
 * - OcrReceiptDataAutofillInput - The input type for the ocrReceiptDataAutofill function.
 * - OcrReceiptDataAutofillOutput - The return type for the ocrReceiptDataAutofill function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OcrReceiptDataAutofillInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of a receipt, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type OcrReceiptDataAutofillInput = z.infer<typeof OcrReceiptDataAutofillInputSchema>;

const OcrReceiptDataAutofillOutputSchema = z.object({
  amount: z.string().describe('The amount on the receipt.'),
  date: z.string().describe('The date on the receipt.'),
  vendorName: z.string().describe('The name of the vendor on the receipt.'),
});
export type OcrReceiptDataAutofillOutput = z.infer<typeof OcrReceiptDataAutofillOutputSchema>;

export async function ocrReceiptDataAutofill(input: OcrReceiptDataAutofillInput): Promise<OcrReceiptDataAutofillOutput> {
  return ocrReceiptDataAutofillFlow(input);
}

const prompt = ai.definePrompt({
  name: 'ocrReceiptDataAutofillPrompt',
  input: {schema: OcrReceiptDataAutofillInputSchema},
  output: {schema: OcrReceiptDataAutofillOutputSchema},
  prompt: `You are an expert OCR reader, specializing in extracting data from receipts.

You will use this information to extract the amount, date, and vendor name from the receipt.

Use the following as the primary source of information about the receipt.

Photo: {{media url=photoDataUri}}`,
});

const ocrReceiptDataAutofillFlow = ai.defineFlow(
  {
    name: 'ocrReceiptDataAutofillFlow',
    inputSchema: OcrReceiptDataAutofillInputSchema,
    outputSchema: OcrReceiptDataAutofillOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
