// This is an automatically generated file. Please do not edit this file directly.

'use server';

/**
 * @fileOverview This file defines a Genkit flow for providing AI-powered spending tips based on a user's expense history.
 *
 * - `getSpendingTips` - A function that takes expense history as input and returns AI-generated spending tips.
 * - `SpendingTipsInput` - The input type for the `getSpendingTips` function, representing the user's expense history.
 * - `SpendingTipsOutput` - The output type for the `getSpendingTips` function, representing the AI-generated spending tips.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SpendingTipsInputSchema = z.object({
  expenseHistory: z.string().describe('A detailed history of the user\'s expenses, including amounts, categories, and dates.'),
});

export type SpendingTipsInput = z.infer<typeof SpendingTipsInputSchema>;

const SpendingTipsOutputSchema = z.object({
  spendingTips: z.string().describe('AI-generated spending tips based on the user\'s expense history.'),
});

export type SpendingTipsOutput = z.infer<typeof SpendingTipsOutputSchema>;

export async function getSpendingTips(input: SpendingTipsInput): Promise<SpendingTipsOutput> {
  return spendingTipsFlow(input);
}

const spendingTipsPrompt = ai.definePrompt({
  name: 'spendingTipsPrompt',
  input: {schema: SpendingTipsInputSchema},
  output: {schema: SpendingTipsOutputSchema},
  prompt: `You are an AI assistant designed to provide personalized spending tips based on a user's expense history.

  Analyze the following expense history and identify potential areas for savings. Provide actionable and specific recommendations to help the user better understand their spending habits and make informed financial decisions.

  Expense History:
  {{expenseHistory}}

  Spending Tips:`, // add safetySettings to the prompt
  config: {
    safetySettings: [
      {
        category: 'HARM_CATEGORY_HATE_SPEECH',
        threshold: 'BLOCK_ONLY_HIGH',
      },
      {
        category: 'HARM_CATEGORY_DANGEROUS_CONTENT',
        threshold: 'BLOCK_NONE',
      },
      {
        category: 'HARM_CATEGORY_HARASSMENT',
        threshold: 'BLOCK_MEDIUM_AND_ABOVE',
      },
      {
        category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',
        threshold: 'BLOCK_LOW_AND_ABOVE',
      },
    ],
  },
});

const spendingTipsFlow = ai.defineFlow({
    name: 'spendingTipsFlow',
    inputSchema: SpendingTipsInputSchema,
    outputSchema: SpendingTipsOutputSchema,
  },
  async input => {
    const {output} = await spendingTipsPrompt(input);
    return output!;
  }
);
